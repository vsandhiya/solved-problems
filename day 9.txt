####Maximum Stamina####


Humpy likes to jump from one building to another. But he only jumps to next higher building and stops when no higher building is available. Stamina required for a journey is xor of all the heights on which humpy jumps until he stops. If heights are [1 2 4], and he starts from 1, goes to 2 stamina required is 1?2=3, then from 2 to 3. Stamina for the entire journey is 1?2?4=7. Find the maximum stamina required if can start his journey from any building.

Input Format ::
First line: N, no of buildings. Second line: N integers, defining heights of buildings.

Constraints
None

Output Format ::
Single Integer that is the maximum stamina required for any journey.

Sample Input 0 ::
5
1 2 3 8 6

Sample Output 0::
11

Explanation 0
If he starts from building 1, the stamina required is 1 ^ 2 ^ 3 ^ 8 = 8

From the building 2, the stamina required is 2 ^ 3 ^ 8 = 9

From the building 3, the stamina required is 3 ^ 8 = 11

Similarly, from 8 and 6, stamina required are 8 and 6 respectively.

The maximum stamina required for the journey is from building 3 is 11.

So the answer is 11.

Sample Input 1::
2
5 5

Sample Output 1
5
Sample Input 2
100
1357 1580 50 1944 639 1473 1748 5 974 1985 1076 975 1661 1673 1214 1137 1380 1508 1851 323 500 61 460 641 731 692 484 937 934 127 1543 371 1573 1735 420 1041 308 299 1134 1254 7 1545 622 1721 1190 1991 29 1372 136 230 420 1121 1864 556 404 1309 1426 884 279 1404 1669 880 145 1400 681 1137 58 1926 373 102 1216 810 1833 1628 287 1764 1157 1573 1812 1969 262 885 1710 739 1004 1392 788 1758 1331 1737 488 188 1610 1932 995 844 338 248 13 1570
Sample Output 2

2047
Sample Input 3
10
3 15 5 19 8 1 15 6 7 4

Sample Output 3
31

Sample Input 4
1003

Sample Output 4

262021
Sample Input 5
5
1 2 3 2 3

Sample Output 5
3



###solution###



p=input()
n=list(map(int,input().strip().split()))
b=max(n)
a=[]
for i in range(len(n)):
  if int(n[i])<int(n[i+1]):
     a.append(n[i])
     i+=1
  else:
     if int(n[i])==int(b):
        a.append(n[i])
     break;
if len(a)==1:
    print(*a)
else:
    l=[]
    for x in range(len(a)):
        l.append(a[x:])
    l.pop()
    #print(l)
    z1=[]
    z=[]
    for i in l:
        count = 0
        for j in i:
          count=count^j
          z.append(count)
        t=max(z)
        z1.append(t)
    #print(z1)
    print(max(z1))